# This tests an arbitrary 1-phase junction. The setup consists of 2 meshes
# connected by a junction. At t = 0, a wave of differing density enters the left
# boundary, and it should propagate through the junction without any
# disturbance; ideally, it should be the same solution as without the junction.

[Model]
  model = 1phase
[]

[Physics]
  gravity = 0 0 0
[]

[Mesh]
  [mesh1]
    type = UniformMesh
    start = 0 0 0
    length = 1
    n_cell = 20
  []
  [mesh2]
    type = UniformMesh
    start = 1 0 0
    length = 1
    n_cell = 20
  []
[]

[EoS]
  [air]
    type = IdealGasEoS
    gamma = 1.4
    R = 290
  []
[]

[IC]
  [mesh1]
    # hump profile on left half
    T = 300 + 50 * sin(2*pi*x + 1.5*pi) if x < 1 else 250
    u = 1
    p = 1e5
  []
  [mesh2]
    T = 250
    u = 1
    p = 1e5
  []
[]

[BC]
  [left]
    type = InletP0T0BC
    mesh_name = mesh1
    boundary = left
    phase = air
    # p0, T0 @ (p = 1e5, T = 250 K, u = 1 m/s)
    p0 = 100000.68965687
    T0 = 250.00049261084
  []
  [right]
    type = OutletBC
    mesh_name = mesh2
    boundary = right
    phase = air
    p = 1.0e5
  []
[]

[Junctions]
  [junction1]
    type = NewerCompressibleJunction
    phase = air
    mesh_names = mesh1 mesh2
    mesh_sides = right left
  []
[]

[Stabilization]
  type = NoStabilization
[]

[Executioner]
  type = ImplicitEulerExecutioner

  [TimeStepSizer]
    type = ConstantTimeStepSizer
    dt = 0.05
    end_time = 0.50
  []
[]

[NonlinearSolver]
  verbose = True
  absolute_tolerance = 1e-6
  max_iterations = 10

  scaling_arhoA1  = 1
  scaling_arhouA1 = 1e-1
  scaling_arhoEA1 = 1e-5
[]

[Output]
  [csv]
    type = CSVOutput
    names = rho u p A
    save_by_mesh = True
  []
  [plot]
    type = PlotOutput
    plot_sets = rho u p A
    plot_by_mesh = True
  []
[]
