# This is a 2-phase problem known as the "Sedimentation problem", taken from
# the following reference:
#
# A. Ambroso, C. Chalons, and P.-A. Raviart
# A Godunov-type method for the seven-equation model of compressible two-phase flow
# Computers & Fluids 54 (2012) 67-91
#
# Both phases use ideal gas EOS, and the following gamma values are used:
#   liquid: gamma = 1.0005
#   vapor:  gamma = 1.4
# Cv is chosen here to be 1 for both, although this isn't explicitly stated in
# the reference above, probably because the temperature is irrelevant to this problem.
#
# The IC are uniform, given by the following values:
#   alpha_liquid = 0.5
#   rho_liquid   = 1000
#   rho_vapor    = 1
#   vel_liquid   = 0
#   vel_vapor    = 0
#   p_liquid     = 1e5
#   p_vapor      = 1e5
#
# The spatial domain is (0, 7.5), and the acceleration due to gravity is 9.81 m/s^2.
# Results are typically plotted at t = 0.8.

[Model]
  model = 2phase
[]

[Physics]
  gravity = 9.81 0 0
[]

[InterfaceClosures]
  type = BerryInterfaceClosures
  a_int_max = 1700
[]

[Mesh]
  type = UniformMesh
  start = 0 0 0
  length = 7.5
  n_cell = 50
[]

[EoS]
  [liquid]
    type = StiffenedGasEoS
    gamma = 1.0005
    cv = 1
    q = 0
    p_inf = 0
    q_prime = 0
  []
  [vapor]
    type = StiffenedGasEoS
    gamma = 1.4
    cv = 1
    q = 0
    p_inf = 0
    q_prime = 0
  []
[]

[IC]
  vf1 = 0.5
  p1 = 1.0e5
  rho1 = 1.0e3
  u1 = 0
  p2 = 1.0e5
  rho2 = 1
  u2 = 0
[]

[BC]
  [left_liquid]
    type = SolidWallBC
    boundary = left
    phase = liquid
  []
  [right_liquid]
    type = SolidWallBC
    boundary = right
    phase = liquid
  []
  [left_vapor]
    type = SolidWallBC
    boundary = left
    phase = vapor
  []
  [right_vapor]
    type = SolidWallBC
    boundary = right
    phase = vapor
  []
[]

[SpatialDiscretization]
  type = FiniteElementMethod

  [Stabilization]
    type = LaxFriedrichsStabilization
  []
[]

[Executioner]
  type = TransientExecutioner

  [TimeIntegrator]
    type = ImplicitEuler
  []
  [TimeStepSizer]
    type = ConstantTimeStepSizer
    dt = 0.01
    end_time = 0.5
  []
[]

[NonlinearSolver]
  verbose = True
  absolute_tolerance = 1e-5
  relative_tolerance = 1e-5
  max_iterations = 10
[]

[Output]
  [plot]
    type = PlotOutput
    plot_sets = vf1 [p1,p2] [u1,u2] [T1,T2]
  []
[]
